{"ast":null,"code":"(function () {\n  var div, React, DivWrapper;\n  div = require('react-dom-factories').div;\n  React = require('react');\n\n  module.exports = DivWrapper = function (superclass) {\n    var prototype = extend$((import$(DivWrapper, superclass).displayName = 'DivWrapper', DivWrapper), superclass).prototype,\n        constructor = DivWrapper;\n    DivWrapper.defaultProps = {\n      className: \"\",\n      onHeightChange: function onHeightChange() {}\n    };\n\n    DivWrapper.prototype.render = function () {\n      return div({\n        className: this.props.className,\n        ref: 'dropdown'\n      }, this.props.children);\n    };\n\n    DivWrapper.prototype.componentDidMount = function () {\n      this.props.onHeightChange(this.refs.dropdown.offsetHeight);\n    };\n\n    DivWrapper.prototype.componentDidUpdate = function () {\n      this.props.onHeightChange(this.refs.dropdown.offsetHeight);\n    };\n\n    DivWrapper.prototype.componentWillUnmount = function () {\n      this.props.onHeightChange(0);\n    };\n\n    function DivWrapper() {\n      DivWrapper.superclass.apply(this, arguments);\n    }\n\n    return DivWrapper;\n  }(React.Component);\n\n  function extend$(sub, sup) {\n    function fun() {}\n\n    fun.prototype = (sub.superclass = sup).prototype;\n    (sub.prototype = new fun()).constructor = sub;\n    if (typeof sup.extended == 'function') sup.extended(sub);\n    return sub;\n  }\n\n  function import$(obj, src) {\n    var own = {}.hasOwnProperty;\n\n    for (var key in src) {\n      if (own.call(src, key)) obj[key] = src[key];\n    }\n\n    return obj;\n  }\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}