{"ast":null,"code":"(function () {\n  var React, div, isEqualToObject, ValueWrapper;\n  React = require('react');\n  div = require('react-dom-factories').div;\n  isEqualToObject = require('prelude-extension').isEqualToObject;\n\n  module.exports = ValueWrapper = function (superclass) {\n    var prototype = extend$((import$(ValueWrapper, superclass).displayName = 'ValueWrapper', ValueWrapper), superclass).prototype,\n        constructor = ValueWrapper;\n    ValueWrapper.defaultProps = {};\n\n    ValueWrapper.prototype.render = function () {\n      return div({\n        className: 'value-wrapper'\n      }, this.props.renderItem(this.props.item));\n    };\n\n    ValueWrapper.prototype.shouldComponentUpdate = function (nextProps) {\n      var ref$;\n      return !isEqualToObject(nextProps != null ? nextProps.uid : void 8, (ref$ = this.props) != null ? ref$.uid : void 8);\n    };\n\n    function ValueWrapper() {\n      ValueWrapper.superclass.apply(this, arguments);\n    }\n\n    return ValueWrapper;\n  }(React.Component);\n\n  function extend$(sub, sup) {\n    function fun() {}\n\n    fun.prototype = (sub.superclass = sup).prototype;\n    (sub.prototype = new fun()).constructor = sub;\n    if (typeof sup.extended == 'function') sup.extended(sub);\n    return sub;\n  }\n\n  function import$(obj, src) {\n    var own = {}.hasOwnProperty;\n\n    for (var key in src) {\n      if (own.call(src, key)) obj[key] = src[key];\n    }\n\n    return obj;\n  }\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}