{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\victo\\\\Desktop\\\\VLQ.se\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\victo\\\\Desktop\\\\VLQ.se\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\victo\\\\Desktop\\\\VLQ.se\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\victo\\\\Desktop\\\\VLQ.se\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\victo\\\\Desktop\\\\VLQ.se\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\victo\\\\Desktop\\\\VLQ.se\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\victo\\\\Desktop\\\\VLQ.se\\\\src\\\\components\\\\ManageSerie.js\";\nimport React, { Component } from 'react'; // import { Link, Redirect } from 'react-router-dom';\n\nimport FutureGames from './ManageTourComps/FutureGames';\nimport Tabell from './Tabell';\nimport '../css/managetour.scss';\nimport '../css/bootstrap.css';\n\nvar ManageSerie =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ManageSerie, _Component);\n\n  function ManageSerie(props) {\n    var _this;\n\n    _classCallCheck(this, ManageSerie);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ManageSerie).call(this, props));\n    _this.state = {\n      data: _this.props.data,\n      teams: _this.props.data.teams,\n      showShadowBottom: {\n        visibility: \"visible\"\n      },\n      showShadowTop: {\n        visibility: \"visible\"\n      },\n      login: true,\n      error: false,\n      firstLoad: true,\n      groupHeight: {\n        height: '70px'\n      },\n      lastScrollY: 0,\n      ticking: false,\n      showModal: false\n    };\n    _this.format = \"ABCDEFGHIJKLMNOP\";\n    _this.ref = React.createRef();\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleShow = _this.handleShow.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ManageSerie, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (!this.state.loading) {\n        if (this.state.firstLoad) {\n          this.setState({\n            firstLoad: false\n          });\n        }\n      }\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose() {\n      this.setState({\n        showModal: false\n      });\n    }\n  }, {\n    key: \"handleShow\",\n    value: function handleShow() {\n      this.setState({\n        showModal: true\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(input) {\n      console.log('update');\n      this.setState({\n        data: input.data,\n        teams: input.data.teams\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.error) {\n        document.title = \"Ingen turnering hittades\";\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"no-tournament\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Ingen turnering hittades\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"V\\xE4nligen kontrollera att du angav korrekt address.\"), React.createElement(\"div\", {\n          className: \"link\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          role: \"img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"\\uD83D\\uDD17 = \\uD83D\\uDC94\")), React.createElement(\"div\", {\n          className: \"line\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        })));\n      } else {\n        var popup;\n        var rubrik;\n        var resultatClass;\n        var displayedGroup;\n        var edit = \"\";\n\n        if (this.state.loading) {\n          var inside = React.createElement(\"div\", {\n            className: \"loading\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          });\n        } else {\n          edit = React.createElement(\"div\", {\n            className: \"editContainer\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            id: \"futureGamesWrap\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, React.createElement(FutureGames, {\n            data: this.state.data,\n            fetchData: this.props.fetchData,\n            bracket: false,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          })), React.createElement(\"div\", {\n            className: \"tabellwrap\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"tabellcontent\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, React.createElement(Tabell, {\n            data: this.state.data,\n            teams: this.state.data.teams,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }))));\n          rubrik = React.createElement(\"div\", {\n            className: \"rubrik\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, this.state.data.name));\n          resultatClass = 'editWrap';\n        }\n\n        return React.createElement(\"div\", {\n          id: \"manageTour\",\n          ref: this.ref,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: resultatClass,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, edit));\n      }\n    }\n  }]);\n\n  return ManageSerie;\n}(Component);\n\nexport default ManageSerie; // <Modal show={this.state.showModal} onHide={this.handleClose}>\n//   <Modal.Header closeButton>\n//     <Modal.Title>Visningssida</Modal.Title>\n//   </Modal.Header>\n//   <Modal.Body>\n//     {urlString}\n//   </Modal.Body>\n// </Modal>\n// <CustomScrollbars autoHeight autoHeightMin={(document.documentElement.clientHeight)-65-50-62-38} onUpdate={this.handleUpdate}>\n// </CustomScrollbars>\n// <div className=\"shadowTop\" style={this.state.showShadowTop}></div>\n// <div className=\"shadowBottom\" style={this.state.showShadowBottom}></div>\n// let pointerClass = {\"pointerwrap\" + }\n// <Scrollbars autoWidth autoWidthMax={1200} onScroll={this.handleScroll}>\n//   <div className=\"groupContent\">\n//     {groups}\n//   </div>\n// </Scrollbars>\n// <input type=\"text\" readonly value={urlString}/><div className=\"copyButton\">&#x2398;</div>","map":{"version":3,"sources":["C:\\Users\\victo\\Desktop\\VLQ.se\\src\\components\\ManageSerie.js"],"names":["React","Component","FutureGames","Tabell","ManageSerie","props","state","data","teams","showShadowBottom","visibility","showShadowTop","login","error","firstLoad","groupHeight","height","lastScrollY","ticking","showModal","format","ref","createRef","handleClose","bind","handleShow","loading","setState","input","console","log","document","title","popup","rubrik","resultatClass","displayedGroup","edit","inside","fetchData","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import { Link, Redirect } from 'react-router-dom';\r\n\r\nimport FutureGames from './ManageTourComps/FutureGames';\r\nimport Tabell from './Tabell';\r\n\r\nimport '../css/managetour.scss';\r\nimport '../css/bootstrap.css';\r\n\r\nclass ManageSerie extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: this.props.data,\r\n      teams: this.props.data.teams,\r\n      showShadowBottom: {visibility: \"visible\"},\r\n\t\t\tshowShadowTop: {visibility: \"visible\"},\r\n      login: true,\r\n      error: false,\r\n      firstLoad: true,\r\n      groupHeight: {height: '70px'},\r\n      lastScrollY: 0,\r\n      ticking: false,\r\n      showModal: false\r\n\t\t};\r\n\r\n    this.format = \"ABCDEFGHIJKLMNOP\";\r\n    this.ref = React.createRef();\r\n\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if(!this.state.loading) {\r\n      if(this.state.firstLoad) {\r\n        this.setState({firstLoad: false});\r\n      }\r\n    }\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({ showModal: false });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({ showModal: true });\r\n  }\r\n\r\n  componentWillReceiveProps(input) {\r\n    console.log('update');\r\n    this.setState({\r\n      data: input.data,\r\n      teams: input.data.teams,\r\n    });\r\n  }\r\n\r\n\trender() {\r\n    if(this.state.error) {\r\n\t\t\tdocument.title = \"Ingen turnering hittades\";\r\n\t\t\treturn(\r\n  \t\t\t<div>\r\n  \t\t\t\t<div className=\"no-tournament\">\r\n  \t\t\t\t\t<h1>Ingen turnering hittades</h1>\r\n  \t\t\t\t\t<p>Vänligen kontrollera att du angav korrekt address.</p>\r\n  \t\t\t\t\t<div className=\"link\"><span role=\"img\">&#128279; = &#128148;</span></div>\r\n  \t\t\t\t\t<div className=\"line\"></div>\r\n  \t\t\t\t</div>\r\n  \t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n    else {\r\n      let popup;\r\n      let rubrik;\r\n      let resultatClass;\r\n      let displayedGroup;\r\n      let edit = \"\";\r\n\r\n      if(this.state.loading) {\r\n        let inside = (\r\n          <div className=\"loading\"></div>\r\n        );\r\n      }\r\n\r\n      else {\r\n        edit = (\r\n          <div className=\"editContainer\">\r\n            <div id=\"futureGamesWrap\">\r\n              <FutureGames\r\n                data={this.state.data}\r\n                fetchData={this.props.fetchData}\r\n                bracket={false}\r\n              />\r\n            </div>\r\n            <div className=\"tabellwrap\">\r\n              <div className=\"tabellcontent\">\r\n                <Tabell data={this.state.data} teams={this.state.data.teams}></Tabell>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n\r\n        rubrik = (\r\n          <div className=\"rubrik\">\r\n            <h2>{this.state.data.name}</h2>\r\n          </div>\r\n        );\r\n        resultatClass = 'editWrap';\r\n      }\r\n\r\n      return (\r\n        <div id=\"manageTour\" ref={this.ref}>\r\n          <div className={resultatClass}>\r\n            {edit}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\t}\r\n}\r\n\r\nexport default ManageSerie;\r\n\r\n// <Modal show={this.state.showModal} onHide={this.handleClose}>\r\n//   <Modal.Header closeButton>\r\n//     <Modal.Title>Visningssida</Modal.Title>\r\n//   </Modal.Header>\r\n//   <Modal.Body>\r\n//     {urlString}\r\n//   </Modal.Body>\r\n// </Modal>\r\n\r\n// <CustomScrollbars autoHeight autoHeightMin={(document.documentElement.clientHeight)-65-50-62-38} onUpdate={this.handleUpdate}>\r\n// </CustomScrollbars>\r\n\r\n// <div className=\"shadowTop\" style={this.state.showShadowTop}></div>\r\n// <div className=\"shadowBottom\" style={this.state.showShadowBottom}></div>\r\n// let pointerClass = {\"pointerwrap\" + }\r\n// <Scrollbars autoWidth autoWidthMax={1200} onScroll={this.handleScroll}>\r\n//   <div className=\"groupContent\">\r\n//     {groups}\r\n//   </div>\r\n// </Scrollbars>\r\n// <input type=\"text\" readonly value={urlString}/><div className=\"copyButton\">&#x2398;</div>\r\n"]},"metadata":{},"sourceType":"module"}