{"ast":null,"code":"(function () {\n  var React, div, isEqualToObject, cancelEvent, OptionWrapper;\n  React = require('react');\n  div = require('react-dom-factories').div;\n  isEqualToObject = require('prelude-extension').isEqualToObject;\n  cancelEvent = require('./utils').cancelEvent;\n\n  module.exports = OptionWrapper = function (superclass) {\n    var prototype = extend$((import$(OptionWrapper, superclass).displayName = 'OptionWrapper', OptionWrapper), superclass).prototype,\n        constructor = OptionWrapper;\n    OptionWrapper.defaultProps = {};\n\n    OptionWrapper.prototype.render = function () {\n      var this$ = this;\n      return div({\n        className: \"option-wrapper \" + (!!this.props.highlight ? 'highlight' : ''),\n        onMouseDown: function onMouseDown(e) {\n          var _listener;\n\n          _listener = function listener(e) {\n            this$.props.onClick(e);\n            return window.removeEventListener('mouseup', _listener);\n          };\n\n          window.addEventListener('mouseup', _listener);\n          return cancelEvent(e);\n        },\n        onMouseMove: this.props.onMouseMove,\n        onMouseOut: this.props.onMouseOut,\n        onMouseOver: this.props.onMouseOver\n      }, this.props.renderItem(this.props.item));\n    };\n\n    OptionWrapper.prototype.shouldComponentUpdate = function (nextProps) {\n      var ref$, ref1$, ref2$;\n      return !isEqualToObject(nextProps != null ? nextProps.uid : void 8, (ref$ = this.props) != null ? ref$.uid : void 8) || (nextProps != null ? nextProps.highlight : void 8) !== ((ref1$ = this.props) != null ? ref1$.highlight : void 8) || (nextProps != null ? nextProps.selectable : void 8) !== ((ref2$ = this.props) != null ? ref2$.selectable : void 8);\n    };\n\n    function OptionWrapper() {\n      OptionWrapper.superclass.apply(this, arguments);\n    }\n\n    return OptionWrapper;\n  }(React.Component);\n\n  function extend$(sub, sup) {\n    function fun() {}\n\n    fun.prototype = (sub.superclass = sup).prototype;\n    (sub.prototype = new fun()).constructor = sub;\n    if (typeof sup.extended == 'function') sup.extended(sub);\n    return sub;\n  }\n\n  function import$(obj, src) {\n    var own = {}.hasOwnProperty;\n\n    for (var key in src) {\n      if (own.call(src, key)) obj[key] = src[key];\n    }\n\n    return obj;\n  }\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}