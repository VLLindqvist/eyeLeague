{"ast":null,"code":"(function () {\n  var React, ref$, div, span, map, HighlightedText;\n  React = require('react');\n  ref$ = require('react-dom-factories'), div = ref$.div, span = ref$.span;\n  map = require('prelude-ls').map;\n\n  module.exports = HighlightedText = function (superclass) {\n    var prototype = extend$((import$(HighlightedText, superclass).displayName = 'HighlightedText', HighlightedText), superclass).prototype,\n        constructor = HighlightedText;\n    HighlightedText.defaultProps = {\n      partitions: [],\n      text: \"\",\n      style: {},\n      highlightStyle: {}\n    };\n\n    HighlightedText.prototype.render = function () {\n      var this$ = this;\n      return div({\n        className: 'highlighted-text',\n        style: this.props.style\n      }, map(function (arg$) {\n        var start, end, highlight;\n        start = arg$[0], end = arg$[1], highlight = arg$[2];\n        return span({\n          key: this$.props.text + \"\" + start + end + highlight,\n          className: highlight ? 'highlight' : '',\n          style: highlight ? this$.props.highlightStyle : {}\n        }, this$.props.text.substring(start, end));\n      })(this.props.partitions));\n    };\n\n    function HighlightedText() {\n      HighlightedText.superclass.apply(this, arguments);\n    }\n\n    return HighlightedText;\n  }(React.Component);\n\n  function extend$(sub, sup) {\n    function fun() {}\n\n    fun.prototype = (sub.superclass = sup).prototype;\n    (sub.prototype = new fun()).constructor = sub;\n    if (typeof sup.extended == 'function') sup.extended(sub);\n    return sub;\n  }\n\n  function import$(obj, src) {\n    var own = {}.hasOwnProperty;\n\n    for (var key in src) {\n      if (own.call(src, key)) obj[key] = src[key];\n    }\n\n    return obj;\n  }\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}