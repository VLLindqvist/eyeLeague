{"ast":null,"code":"(function () {\n  var React, createFactory, path, SvgWrapper, ToggleButton;\n  React = require('react'), createFactory = React.createFactory;\n  path = require('react-dom-factories').path;\n  SvgWrapper = createFactory(require('./SvgWrapper'));\n\n  module.exports = ToggleButton = function (superclass) {\n    var prototype = extend$((import$(ToggleButton, superclass).displayName = 'ToggleButton', ToggleButton), superclass).prototype,\n        constructor = ToggleButton;\n    ToggleButton.defaultProps = {\n      open: false,\n      flipped: false\n    };\n\n    ToggleButton.prototype.render = function () {\n      return SvgWrapper({\n        className: 'react-selectize-toggle-button',\n        style: {\n          width: 10,\n          height: 8\n        }\n      }, path({\n        d: function () {\n          switch (false) {\n            case !(this.props.open && !this.props.flipped || !this.props.open && this.props.flipped):\n              return \"M0 6 L5 1 L10 6 Z\";\n\n            default:\n              return \"M0 1 L5 6 L10 1 Z\";\n          }\n        }.call(this)\n      }));\n    };\n\n    function ToggleButton() {\n      ToggleButton.superclass.apply(this, arguments);\n    }\n\n    return ToggleButton;\n  }(React.PureComponent);\n\n  function extend$(sub, sup) {\n    function fun() {}\n\n    fun.prototype = (sub.superclass = sup).prototype;\n    (sub.prototype = new fun()).constructor = sub;\n    if (typeof sup.extended == 'function') sup.extended(sub);\n    return sub;\n  }\n\n  function import$(obj, src) {\n    var own = {}.hasOwnProperty;\n\n    for (var key in src) {\n      if (own.call(src, key)) obj[key] = src[key];\n    }\n\n    return obj;\n  }\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}